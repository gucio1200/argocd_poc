deploymentStrategy:
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 25%

identity:
  externalCA: true
  issuer:
    scheme: kubernetes.io/tls
    issuanceLifetime: 2h0m0s

controllerReplicas: 3

controller:
  podDisruptionBudget:
    maxUnavailable: 1

enablePodDisruptionBudget: true

highAvailability: true

podAnnotations:
  configmap.reloader.stakater.com/reload: "linkerd-identity-trust-roots"
clusterDomain: cluster.local
#clusterNetworks: "10.244.0.0/16,10.0.0.0/16"
controllerLogLevel: debug
controllerLogFormat: plain
controlPlaneTracing: false
controlPlaneTracingNamespace: linkerd-jaeger
enablePodAntiAffinity: true

webhookFailurePolicy: Fail # this will preven pod scheaduling if linkerd wont patch pod with injector

#prometheusUrl: "http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090"

policyController:
  # -- The default allow policy to use when no `Server` selects a pod.  One of: "all-authenticated",
  # "all-unauthenticated", "cluster-authenticated", "cluster-unauthenticated", "deny"
  # @default -- "all-unauthenticated"
  defaultAllowPolicy: "all-unauthenticated"

  logLevel: debug

  probeNetworks:
    - 0.0.0.0/0

proxyInit:
  iptablesMode: nft
  logLevel: "debug"
  # -- Default set of outbound ports to skip via iptables
  # - Galera (4567,4568)
  # k3s issue https://github.com/linkerd/linkerd2/issues/7970
  ignoreOutboundPorts: "4567,4568,6443"

# proxy configuration
proxy:
  logLevel: debug
  # -- Enable service profiles for non-Kubernetes services
  enableExternalProfiles: true
  # -- Default set of opaque ports
  # - SMTP (25,587) server-first
  # - MYSQL (3306) server-first
  # - Galera (4444) server-first
  # - PostgreSQL (5432) server-first
  # - Redis (6379) server-first
  # - ElasticSearch (9300) server-first
  # - Memcached (11211) clients do not issue any preamble, which breaks detection
  opaquePorts: "25,587,3306,4444,5432,6379,9300,11211"
